import ValidationRuleSet from "../Validation";
import HtmlValidationRule from "./HtmlValidationRule";
export default class HtmlValidationRuleSet extends ValidationRuleSet<HtmlValidationRule> {
    private _rules;
    get rules(): ReadonlyArray<HtmlValidationRule>;
    lambda(method: (val: string, iframeDoc: Document) => boolean | Promise<boolean>, message: string): HtmlValidationRuleSet;
    required(message?: string): HtmlValidationRuleSet;
    isValidHTML(message?: string): HtmlValidationRuleSet;
    stringEquals(compareTo: string, message?: string): HtmlValidationRuleSet;
    contentIncludes(searchString: string, message?: string): HtmlValidationRuleSet;
    iframeContains(selector: string, message?: string): HtmlValidationRuleSet;
    elementHasAttributeColor(selector: string, property: string, color: string, delta?: number, message?: string): HtmlValidationRuleSet;
    elementIncludesText(selector: string, text: string, message?: string): HtmlValidationRuleSet;
    elementTextMatchesRegex(selector: string, regex: RegExp, message?: string): HtmlValidationRuleSet;
    stringMatchesRegex(regex: RegExp, message?: string): HtmlValidationRuleSet;
}
